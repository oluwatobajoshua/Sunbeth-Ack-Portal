{"version":3,"file":"static/js/920.422806bb.chunk.js","mappings":"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","sources":["components/Onboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Onboarding: Set Password after invite\r\nconst Onboard: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [token, setToken] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Parse email/token from URL if present\r\n  React.useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    setEmail(params.get('email') || '');\r\n    setToken(params.get('token') || '');\r\n  }, []);\r\n\r\n  const handleSetPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    if (password !== confirm) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/external-users/set-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, token, password })\r\n      });\r\n      const j = await res.json();\r\n      if (!res.ok) throw new Error(j.error || 'Failed to set password');\r\n      setSuccess(true);\r\n    } catch (e: any) {\r\n      setError(e.message || 'Failed to set password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"wrap centered\">\r\n        <div className=\"grid\" style={{ maxWidth: 680, margin: '0 auto' }}>\r\n          <main>\r\n            <div className=\"card\" style={{ padding: 0, overflow: 'hidden' }}>\r\n              <div style={{ background: 'linear-gradient(135deg, var(--primary) 0%, var(--primary-500, #0a6b55) 100%)', color: '#fff', padding: '18px 22px' }}>\r\n                <div style={{ fontWeight: 800, fontSize: 18 }}>Password Set</div>\r\n                <div className=\"small\" style={{ opacity: .9 }}>You may now log in</div>\r\n              </div>\r\n              <div style={{ padding: 18 }}>\r\n                <div>Your password has been set. You may now log in.</div>\r\n                <a href=\"/login\"><button className=\"btn\" style={{ marginTop: 16 }}>Go to Login</button></a>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrap centered\">\r\n      <div className=\"grid\" style={{ maxWidth: 680, margin: '0 auto' }}>\r\n        <main>\r\n          <div className=\"card\" style={{ padding: 0, overflow: 'hidden' }}>\r\n            <div style={{ background: 'linear-gradient(135deg, var(--primary) 0%, var(--primary-500, #0a6b55) 100%)', color: '#fff', padding: '18px 22px' }}>\r\n              <div style={{ fontWeight: 800, fontSize: 18 }}>Set Your Password</div>\r\n              <div className=\"small\" style={{ opacity: .9 }}>Complete your onboarding to access Sunbeth</div>\r\n            </div>\r\n            <div style={{ padding: 18 }}>\r\n              <form onSubmit={handleSetPassword}>\r\n                <input type=\"hidden\" value={email} />\r\n                <input type=\"hidden\" value={token} />\r\n                <div style={{ marginBottom: 16 }}>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"New password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                    minLength={8}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div style={{ marginBottom: 16 }}>\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    value={confirm}\r\n                    onChange={e => setConfirm(e.target.value)}\r\n                    required\r\n                    minLength={8}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                {error && <div className=\"small\" style={{ color: '#b91c1c', background: '#fef2f2', border: '1px solid #fee2e2', padding: 10, borderRadius: 8, marginBottom: 12 }}>{error}</div>}\r\n                <button className=\"btn\" type=\"submit\" disabled={loading} style={{ width: '100%' }}>\r\n                  {loading ? 'Setting password...' : 'Set Password'}\r\n                </button>\r\n              </form>\r\n              <div style={{ marginTop: 10 }}>\r\n                <a href=\"/login\">Back to login</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Onboard;\r\n"],"names":["Onboard","email","setEmail","useState","token","setToken","password","setPassword","confirm","setConfirm","error","setError","success","setSuccess","loading","setLoading","React","params","URLSearchParams","window","location","search","get","_jsx","className","children","style","maxWidth","margin","_jsxs","padding","overflow","background","color","fontWeight","fontSize","opacity","href","marginTop","onSubmit","async","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","j","json","ok","Error","message","type","value","marginBottom","placeholder","onChange","target","required","minLength","border","borderRadius","disabled","width"],"sourceRoot":""}