{"version":3,"file":"static/js/355.08758003.chunk.js","mappings":"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","sources":["components/MFA.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// MFA Prompt/Setup for External Users\r\nconst MFA: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [step, setStep] = useState<'setup'|'verify'|'done'>('setup');\r\n  const [secret, setSecret] = useState('');\r\n  const [otpauth, setOtpauth] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Parse email from URL if present\r\n  React.useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    setEmail(params.get('email') || '');\r\n  }, []);\r\n\r\n  // Start MFA setup (get secret and otpauth)\r\n  const startSetup = async () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/external-users/mfa/setup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email })\r\n      });\r\n      const j = await res.json();\r\n      if (!res.ok) throw new Error(j.error || 'Failed to start MFA setup');\r\n      setSecret(j.secret);\r\n      setOtpauth(j.otpauth);\r\n      setStep('verify');\r\n    } catch (e: any) {\r\n      setError(e.message || 'Failed to start MFA setup');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Verify MFA code\r\n  const handleVerify = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/external-users/mfa/verify', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, code })\r\n      });\r\n      const j = await res.json();\r\n      if (!res.ok) throw new Error(j.error || 'Failed to verify code');\r\n      setStep('done');\r\n    } catch (e: any) {\r\n      setError(e.message || 'Failed to verify code');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (step === 'done') {\r\n    return (\r\n      <div className=\"container\" style={{ maxWidth: 400, margin: '0 auto', padding: 32 }}>\r\n        <h2>MFA Enabled</h2>\r\n        <div>MFA is now enabled for your account. You may now log in.</div>\r\n        <a href=\"/login\"><button className=\"btn\" style={{ marginTop: 16 }}>Go to Login</button></a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (step === 'setup') {\r\n    return (\r\n      <div className=\"container\" style={{ maxWidth: 400, margin: '0 auto', padding: 32 }}>\r\n        <h2>Enable MFA</h2>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <button className=\"btn\" onClick={startSetup} disabled={loading || !email}>\r\n            {loading ? 'Starting...' : 'Start MFA Setup'}\r\n          </button>\r\n        </div>\r\n        {error && <div style={{ color: 'red', marginBottom: 12 }}>{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (step === 'verify') {\r\n    return (\r\n      <div className=\"container\" style={{ maxWidth: 400, margin: '0 auto', padding: 32 }}>\r\n        <h2>Verify MFA</h2>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <div>Scan this QR code in your authenticator app:</div>\r\n          <img src={`https://api.qrserver.com/v1/create-qr-code/?data=${encodeURIComponent(otpauth)}&size=200x200`} alt=\"MFA QR\" style={{ margin: '16px 0' }} />\r\n          <div style={{ fontSize: 12, wordBreak: 'break-all' }}>Or enter secret: <b>{secret}</b></div>\r\n        </div>\r\n        <form onSubmit={handleVerify}>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter 6-digit code\"\r\n              value={code}\r\n              onChange={e => setCode(e.target.value)}\r\n              required\r\n              pattern=\"\\\\d{6}\"\r\n              style={{ width: '100%', padding: 8 }}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          {error && <div style={{ color: 'red', marginBottom: 12 }}>{error}</div>}\r\n          <button className=\"btn\" type=\"submit\" disabled={loading} style={{ width: '100%' }}>\r\n            {loading ? 'Verifying...' : 'Verify & Enable MFA'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default MFA;\r\n"],"names":["MFA","email","setEmail","useState","step","setStep","secret","setSecret","otpauth","setOtpauth","code","setCode","error","setError","loading","setLoading","React","params","URLSearchParams","window","location","search","get","startSetup","async","res","fetch","method","headers","body","JSON","stringify","j","json","ok","Error","e","message","handleVerify","preventDefault","_jsxs","className","style","maxWidth","margin","padding","children","_jsx","href","marginTop","marginBottom","onClick","disabled","color","src","concat","encodeURIComponent","alt","fontSize","wordBreak","onSubmit","type","placeholder","value","onChange","target","required","pattern","width","autoFocus"],"sourceRoot":""}